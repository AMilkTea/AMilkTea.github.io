1.生成CA证书：
openssl genrsa -aes256 -out ca.key.pem 2048
openssl req -new -key ca.key.pem -out ca.csr -subj "/C=CN/ST=BJ/L=BJ/O=abc/OU=abc/CN=abc"
openssl x509 -req -days 3650 -sha1 -extensions v3_req -CA ca.cer -CAkey ca.key.pem  -CAserial ca.srl -CAc
reateserial -in ca.csr -out ca.cer //自签名 这里hash算法选择sha1也没影响
openssl pkcs12 -export -clcerts -inkey ca.key.pem -in ca.cer -out ca.p12



2.生成服务器证书
openssl genrsa -aes256 -out server.key.pem 2048
openssl req -new -key server.key.pem -out server.csr -subj "/C=CN/ST=BJ/L=BJ/O=yh/OU=yh/CN=localhost"
openssl x509 -req -days 3650 -sha256 -extensions v3_req -CA ca.cer -CAkey ca.key.pem  -CAserial ca.srl -CAcreateserial -in server.csr -out server.cer //注意hash算法用的是sha256,sha1被google认为是不安全的
openssl pkcs12 -export -clcerts -inkey server.key.pem -in server.cer -out server.p12



3. 客户端证书：
openssl genrsa -aes256 -out client.key.pem 2048
openssl req -new -key client.key.pem -out client.csr -subj "/C=CN/ST=BJ/L=BJ/O=abc/OU=abc/CN=yh"
openssl ca -days 3650 -in client.csr -out client.cer -cert ca.cer -keyfile ca.key.pem
openssl pkcs12 -export -inkey client.key.pem -in client.cer -out client.p12

4. 查看密钥库中打证书信息
keytool -list -v -keystore truststore.jks -storepass changeit

５. 将证书导入密钥库
keytool -import -alias rootca -keystore truststore.jks -file ca.cer
